# 文件路径: .github/workflows/main.yml (最终版本)

name: Multi-File EPG Sync to GitHub & Push to Gitee

on:
  schedule:
    - cron: '0 */6 * * *' 
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    permissions: 
      contents: write
      
    steps:
    - name: Checkout repository (GitHub)
      uses: actions/checkout@v3
      with:
         token: ${{ secrets.GITHUB_TOKEN }} 
         fetch-depth: 0 
         
    - name: Set up Python and Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip
        pip3 install requests

    - name: Run EPG Sync Script
      run: python3 sync.py # 建议使用 python3 明确指定版本

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    # ----------------------------------------------------
    # ⭐ 核心修复步骤：只同步指定列表的文件
    # ----------------------------------------------------
    - name: Check for Changes and Commit Locally (SYNC_FILES only)
      id: commit_changes
      env:
        # 定义需要检查的文件列表，以空格分隔
        SYNC_FILE_LIST: "swh123_epg.xml.gz tel-epg.xml dm2.xml.gz"
        
      run: |
        CHANGED_FILES=""
        
        # 遍历需要同步的文件列表
        for FILE in $SYNC_FILE_LIST; do
          # 检查该文件是否有变动 (M=修改, A=新增)
          # 注意：使用 'git status' 时，新增文件 (Untracked) 不会显示 M/A 状态。
          # 最好先尝试添加到暂存区，然后检查变动。
          
          # 1. 尝试将文件添加到暂存区
          git add "$FILE" 2>/dev/null || true
          
          # 2. 检查暂存区或工作目录中是否有变动
          if git status --porcelain | grep -q "$FILE"; then
            CHANGED_FILES="$CHANGED_FILES $FILE"
          fi
        done
        
        # 移除 CHANGED_FILES 开头的空格
        CHANGED_FILES=$(echo $CHANGED_FILES | xargs)
        
        if [ -n "$CHANGED_FILES" ]; then
            echo "Changes detected in: $CHANGED_FILES"
            
            # 由于上面已经 git add 成功，这里只需要提交即可。
            TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")
            COMMIT_MSG="Auto sync EPG files: $TIMESTAMP"
            git commit -m "$COMMIT_MSG"
            
            echo "PUSH_REQUIRED=true" >> $GITHUB_ENV
        else
            echo "No changes detected in SYNC_FILES. Skipping commit and push."
            echo "PUSH_REQUIRED=false" >> $GITHUB_ENV
        fi

    # ----------------------------------------------------
    # 推送至 Gitee 仓库
    # ----------------------------------------------------
    - name: Push to Gitee
      if: env.PUSH_REQUIRED == 'true'
      env:
        GITEE_USERNAME: shiwenhua 
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        GITEE_REPO: shiwenhua/epg-sync
        
      run: |
        echo "Pushing committed changes to Gitee..."
        git push -f https://${GITEE_USERNAME}:${GITEE_TOKEN}@gitee.com/${GITEE_REPO}.git HEAD:master

    # ----------------------------------------------------
    # 推送至 GitHub 仓库
    # ----------------------------------------------------
    - name: Push to GitHub
      if: success() && env.PUSH_REQUIRED == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        
    - name: Final Status
      run: |
        if [ "${{ env.PUSH_REQUIRED }}" == "true" ]; then
          echo "🎉 文件同步成功并已推送到 Gitee 和 GitHub！"
        else
          echo "ℹ️ 所有文件内容均未变化，同步已跳过。"
        fi
