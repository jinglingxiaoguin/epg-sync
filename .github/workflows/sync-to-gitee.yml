# 文件路径: .github/workflows/main.yml

name: EPG Sync to GitHub & Push to Gitee

# 定义触发器：每六小时运行一次
on:
  schedule:
    # Cron 表达式：每天的 0, 6, 12, 18 点的 0 分运行
    - cron: '0 */6 * * *' 
  # 允许手动触发，方便调试
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository (GitHub)
      uses: actions/checkout@v3
      with:
         token: ${{ secrets.GITHUB_TOKEN }} 
         # ⭐ 修复浅克隆问题：设置 fetch-depth 为 0，拉取完整历史记录，以允许推送到 Gitee。
         fetch-depth: 0 
         
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install requests

    - name: Run EPG Sync Script
      # 运行您的 Python 脚本（请确保脚本名为 sync.py）
      run: python sync.py

    - name: Configure Git
      # 配置 Git 用户信息，用于提交
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    - name: Check for Changes and Push to Gitee
      id: push_gitee
      env:
        # Gitee 认证信息
        GITEE_USERNAME: shiwenhua # <-- ⚠️ 再次确认并替换为您真实的 Gitee 用户名
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }} # 确保已在 GitHub Secrets 中配置，且权限正确
        # Gitee 仓库路径
        GITEE_REPO: shiwenhua/epg-sync # <-- 确认仓库路径
        
      run: |
        # 检查 swh123_epg.gz 文件是否有变化
        if git status --porcelain | grep swh123_epg.gz; then
          echo "Changes detected in swh123_epg.gz, committing..."
          
          # 提交更改到本地仓库
          git add swh123_epg.gz
          TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")
          COMMIT_MSG="Auto sync swh123_epg.gz: $TIMESTAMP"
          git commit -m "$COMMIT_MSG"
          
          echo "Pushing to Gitee..."
          # 修复认证问题：使用 Gitee 用户名和令牌进行认证
          # 格式: https://<用户名>:<令牌>@gitee.com/<用户>/<仓库>.git
          git push -f https://${GITEE_USERNAME}:${GITEE_TOKEN}@gitee.com/${GITEE_REPO}.git HEAD:master
          
          echo "PUSH_STATUS=success" >> $GITHUB_ENV
        else
          echo "No changes detected, skipping Gitee push."
          echo "PUSH_STATUS=skip" >> $GITHUB_ENV
        fi

    # ----------------------------------------------------
    # 可选步骤：将更新后的文件也提交到 GitHub 仓库
    # ----------------------------------------------------
    - name: Push to GitHub (Optional)
      # 只有当文件有变化时才执行
      if: success() && env.PUSH_STATUS == 'success'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        # 确保提交消息与 Gitee 的一致
        commit_message: ${{ github.event.head_commit.message }}
        
    - name: Final Status
      run: |
        if [ "${{ env.PUSH_STATUS }}" == "success" ]; then
          echo "🎉 文件同步成功并已推送到 Gitee！"
        elif [ "${{ env.PUSH_STATUS }}" == "skip" ]; then
          echo "ℹ️ 文件内容未变化，同步已跳过。"
        else
          echo "❌ Gitee 推送发生未知错误，请检查日志。"
        fi
