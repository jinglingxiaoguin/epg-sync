# 文件路径: .github/workflows/main.yml

name: EPG Sync to GitHub & Push to Gitee

on:
  schedule:
    # Cron 表达式：每天的 0, 6, 12, 18 点的 0 分运行
    - cron: '0 */6 * * *' 
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    # 授予 GITHUB_TOKEN 写入仓库内容的权限
    permissions: 
      contents: write
      
    steps:
    - name: Checkout repository (GitHub)
      uses: actions/checkout@v3
      with:
         token: ${{ secrets.GITHUB_TOKEN }} 
         # 修复浅克隆问题，拉取完整历史记录
         fetch-depth: 0 
         
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install requests

    - name: Run EPG Sync Script
      # 运行您的 Python 脚本，它现在会生成 swh123_epg.xml.gz
      run: python sync.py

    - name: Configure Git
      # 配置 Git 用户信息，用于提交
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"

    - name: Check for Changes and Commit Locally
      id: commit_check
      run: |
        # ⭐ 关键修改 1: 检查 swh123_epg.xml.gz 文件变化
        if git status --porcelain | grep swh123_epg.xml.gz; then
          echo "Changes detected in swh123_epg.xml.gz, committing..."
          
          # ⭐ 关键修改 2: 暂存新文件名
          git add swh123_epg.xml.gz
          TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")
          # ⭐ 关键修改 3: 提交信息中使用新文件名
          COMMIT_MSG="Auto sync swh123_epg.xml.gz: $TIMESTAMP"
          git commit -m "$COMMIT_MSG"
          
          echo "PUSH_REQUIRED=true" >> $GITHUB_ENV
        else
          echo "No changes detected, skipping commit."
          echo "PUSH_REQUIRED=false" >> $GITHUB_ENV
        fi

    # ----------------------------------------------------
    # 推送至 Gitee 仓库
    # ----------------------------------------------------
    - name: Push to Gitee
      if: env.PUSH_REQUIRED == 'true'
      env:
        GITEE_USERNAME: shiwenhua # <-- ⚠️ 确认用户名
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        GITEE_REPO: shiwenhua/epg-sync
        
      run: |
        echo "Pushing to Gitee..."
        # 修复 Gitee 认证和浅克隆问题后的推送命令
        git push -f https://${GITEE_USERNAME}:${GITEE_TOKEN}@gitee.com/${GITEE_REPO}.git HEAD:master
        echo "PUSH_STATUS=success" >> $GITHUB_ENV

    # ----------------------------------------------------
    # 推送至 GitHub 仓库
    # ----------------------------------------------------
    - name: Push to GitHub
      # 只有当文件有变化并成功提交到本地后才推送
      if: success() && env.PUSH_REQUIRED == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        
    - name: Final Status
      run: |
        if [ "${{ env.PUSH_REQUIRED }}" == "true" ]; then
          echo "🎉 文件同步成功并已推送到 Gitee 和 GitHub!"
        else
          echo "ℹ️ 文件内容未变化，同步已跳过。"
        fi
